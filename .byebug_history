c
user_searches.empty?
c
Search.count
c
search_params
c
Search.count
user_searches.empty?
c
Search.count
c
user_searches.empty?
create_search
c
search_params
serch_params
c
create_search
user_searches.empty?
c
Search.count
create_search
Search.count
c
exit
Search.all.count
Search.all
c
Search.all.count
Search.all
c
new_content
Search.last.content
Search.count
c
new_content
searches
c
list
c
            format.turbo_stream { render turbo_stream: turbo_stream.replace("list", partial: "searches/list", locals: { list: Search.where(user: request.remote_ip).order(count: :desc) }) }
c
searchs_to_delete
exit
@search_data
search_data
@search_params
c
@search_data
c
@search_data
@search_data = search_data
search_data
c
@search_params
@search_params[:user]
c
search_data[:content]
search_data.content
search_data
c
@search_params
@search_params["user"]
user_searches
